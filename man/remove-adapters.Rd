% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matching.R
\name{cutRseq}
\alias{cutRseq}
\alias{cutLseq}
\title{Remove left and right full and partial patterns}
\usage{
cutRseq(subject, Rpattern, with.indels = FALSE, fixed = "subject",
method = c("exact", "er"), error_rate = 0.2, anchored = TRUE,
ranges = FALSE, checks = TRUE, min_match_flank = 0L, ...)

cutLseq(subject, Lpattern, with.indels = FALSE, fixed = "subject",
method = c("exact", "er"), error_rate = 0.2, anchored = TRUE,
ranges = FALSE, min_match_flank = 1L, checks = TRUE, ...)
}
\arguments{
\item{subject}{\code{\link[Biostrings:DNAString-class]{DNAString}} or 
\code{\link[Biostrings:XStringSet-class]{DNAStringSet}} object}

\item{Rpattern}{3' pattern,
\code{\link[Biostrings:DNAString-class]{DNAString}} object}

\item{with.indels}{Allow indels? This is available only for er method.}

\item{fixed}{Parameter passed to 
code{\link[Biostrings:lowlevel-matching]{isMatchingStartingAt}} and
\code{\link[Biostrings:lowlevel-matching]{isMatchingEndingAt}}  
Default 'subject',  ambiguities in the pattern only are interpreted 
as wildcard. See the argument fixed in 
code{\link[Biostrings:lowlevel-matching]{isMatchingStartingAt}} and
\code{\link[Biostrings:lowlevel-matching]{isMatchingEndingAt}}}

\item{method}{Method used for trimming. If 'exact' the metod is based
in the exact matching of the subsequences of the subject and  adapters 
If 'er' the metod is based on the eror-rate between the subsequences, 
allowing mismatches.}

\item{error_rate}{Error rate (value in [0, 1] value for 'er' method. 
The error rate is the proportion of mismatches allowed between
the adapter and the aligned portion of the subject.
For a given adapter A, the number of allowed mismatches between each 
subsequence s of A and the subject is computed as error_rate * L_s,
where L_s is the length of the subsequence s.}

\item{anchored}{Can the adapter or partial adapter be within 
the sequence? (dafault: anchored = TRUE)
or only in the terminal regions of the sequence (anchored; anchored = TRUE).
Default TRUE (trim only flanking regions).}

\item{ranges}{return ranges? Default FALSE}

\item{checks}{perform internal checks? Default TRUE}

\item{min_match_flank}{Do not trim in flanks of the subject,
if a match has min_match_flank of less length. Default 1L 
(only trim with >=2 coincidences in a flank match)}

\item{...}{additional parameters passed to
\code{\link[Biostrings:lowlevel-matching]{isMatchingStartingAt}} and
\code{\link[Biostrings:lowlevel-matching]{isMatchingEndingAt}}}

\item{Lpattern}{5' pattern,
\code{\link[Biostrings:DNAString-class]{DNAString}} object}
}
\value{
Edited \code{\link[Biostrings:DNAString-class]{DNAString}} or 
\code{\link[Biostrings:XStringSet-class]{DNAStringSet}} object
}
\description{
This program can remove adapters and partial 
adapters from 3' and 5'. The adapters can be anchored or not. 
Two methods are available: one based on the exact matching 
of the sequence and the adapter, and a second in an error rate. 
When indels are allowed, the error rate consists in the edit distance. 
IUPAC simbols are allowed. The methods use the 
\code{\link[Biostrings:lowlevel-matching]{isMatchingStartingAt}} function
of the \pkg{Biostrings} package to find matches. IUPAC symbols
are allowed in all the cases. The present function 
also removes partial adapters, without the need of additional steps
(for example, creating a padded adapter
with 'Ns', etc). 
A similar to what obtained with \code{\link[Biostrings]{trimLRPatterns}}
when the raw adaptor is passed, 
can be obtained with the option anchored = TRUE.
When several matches are found, the function removes the subsequence 
starting from the first match in cutRseq, and ending 
in the last one in cutLseq.
}
\examples{

library(Biostrings)

subject <- DNAStringSet(c('ATCATGCCATCATGAT',
'CATGATATTA', 'TCATG', 'AAAAAA', 'AGGTCATG'))

Lpattern <- Rpattern <- 'TCATG'

cutLseq(subject, Lpattern)
cutLseq(subject, Lpattern, ranges = TRUE)
cutRseq(subject, Rpattern)


cutLseq(subject, Lpattern, anchored = FALSE)
cutLseq(subject, Lpattern, method = 'er', error_rate = 0.2)
cutLseq(subject, Lpattern, method = 'er', error_rate = 0.2, 
with.indels = TRUE)

}
\author{
Leandro Roser \email{learoser@gmail.com}
}
